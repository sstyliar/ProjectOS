============================================================================================
**********************************STUFF TO BE DONE******************************************
============================================================================================

  **SINGLE PLAYER PART**

		DONE->	*Functionality to create 2d array with the maze values.
					
		ABORTED->	*Add it to show_saveMaze...probably better in the read_file.

		DONE->	*Make if statments for wall detection/hit wall prevention before 
		 		 players movement.

		DONE->	*Figure out how to add loot and monsters.
					(Maybe from the array before while(keyboard input chech).

		DONE->	*Make if statements for monster/boss/loot detection/guestion before fighting (y/n).			

		DONE->	*Figure out how to delete previous player position from the terminal.
			
		DONE->	*Figure out how to refresh/erase outpout window text in case of change.

		DONE->	*Change show_saveMaze to only save maze in files, script destination->Server.

		DONE->	*Reminder: Disable temp_maze display in window Maze.

		DONE->	*Fix bugs with player movements. Player carves the maze as he passes. 

		DONE->	*Add restrictions as to how many lesser monsters per maze depending on level.
					Level 1 -> 0 lesser monsters, level 2 -> 1 lesser monsters, etc. 

		DONE->	*Add new column to window stats for the mosnters and boss health bars.

		DONE->	*Add functionality for the user to decide if he wants to fight or not.

		DONE->	*Remove monsters and loot if user declines.

		DONE->	*Fix bug where is gives segmentation fault when trying to display bigger than 15x15 maze.

		DONE->	*Add variations for fighting monsters or boss and create template for multiplayer fighting function.




		*Clean mainController().

	 	

  **MULTIPLAYER PART**





========================
*********VASILW*********
========================

	DONE->	*Make new function for fighting calculations.

	DONE->  *Sockets galore...nough said.






=======================
********XRHSTOS********
=======================

	DONE->	*Add functionality to auto-login if the user desires after the registering is done.

	DONE->	*Make new function to handle the increase in difficulty per level in terms of monsters/boss stats.

	DONE->	*Combine previous function with monsterRestriction( ln. 640 ).
				Make it the monsterRestriction value and assign stats values.
					For exmaple if level = 1 then no monsters allowed.
					If level = 2, one monster allowed with health = 90; armor = 45; attack = 60; accurasy = 100; level = 1;
					Or some shit like that, numbers are going to change anyways.

	*Make new function to handle the points and how the user distributes them in his stats(add respectively to each stat),
	 dont forget to add error and wrong user input handling.
	
	*Combine with ( ln. ~ 661 ) mainController to notify user for loot. Call above function inside here.

	*Create user interface for the user to assign points( noecho() and curs_set() to FALSE) and find out how to make cursor visible and input not recognized until user presses Enter ( maybe make it so wgetch(window) only recognizes KEY_ENTER to save-apply changes 
	to stats, else just print user input to the window). 

	*Assign points everytime he wins a fight vs a monster or a boss and when he reaches loot. 




When project is over:

	*DELETE everything but the positions & level from humanInit function cause human values
	 are assigned by the user manually.

	*Dynamically set player/vasilw/boss stats.

	*CLEAN-UP.

	*Make the MAKEFILE.

	*Go to Fiji.








=======================================================================
*********************************NOTES*********************************
=======================================================================

	*Initial Stats for human for the standard 50 points that the game gives you
	 when you first start it:
			stats.health = 25;
			stats.armor = 10;
			stats.attack = 10;
			stats.accurasy = 0.5;

	*Level 1 boss stats that gives 80% chance of human winning the game:
			stats.health = 30;
   			stats.armor = 5;
   			stats.attack = 15;
   			stats.accurasy = 0.4;

   	*Level 1 boss stats that gives 80% chance of human winning the game:
			stats.health = 25;
   			stats.armor = 5;
   			stats.attack = 10;
   			stats.accurasy = 0.3;